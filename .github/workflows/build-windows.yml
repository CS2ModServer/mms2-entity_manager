name: Build on Windows

on:
  push:
    branches: [ "main" ]
    paths:
      - 'trigger-build.txt'
      - 'src/**.c'
      - 'src/**.cpp'
      - 'src/**.h'
      - 'src/**.hpp'
      - 'external/**.c'
      - 'external/**.cpp'
      - 'external/**.h'
      - 'external/**.hpp'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'trigger-build.txt'
      - 'src/**.c'
      - 'src/**.cpp'
      - 'src/**.h'
      - 'src/**.hpp'
      - 'external/**.c'
      - 'external/**.cpp'
      - 'external/**.h'
      - 'external/**.hpp'

env:
  HL2SDK_BRANCH: cs2
  HL2SDK_ROOT: hl2sdk-cs2
  MMSOURCE_ROOT: metamod-source

jobs:
  build:
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        c_compiler: [cl]
        include:
          - os: windows-latest
            preset: Windows/Release
            artifact_pattern: build/Windows/Release/Release/*
            build_type: Release
            c_compiler: cl
            cpp_compiler: cl

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Get absolute path (Windows)
      id: get_path-windows
      if: runner.os == 'Windows'
      run: |
        $path = (Get-Location).Path
        echo "ABSOLUTE_PATH=$path" >> $env:GITHUB_ENV
      shell: pwsh

    - name: Checkout HL2SDK
      uses: actions/checkout@v4
      with:
        repository: Wend4r/hl2sdk
        ref: ${{ env.HL2SDK_BRANCH }}
        path: ${{ env.HL2SDK_ROOT }}

    - name: Checkout MetaMod:Source
      uses: actions/checkout@v4
      with:
        repository: alliedmodders/metamod-source
        path: ${{ env.MMSOURCE_ROOT }}

    - name: Configure CMake
      run: >
        cmake --preset ${{ matrix.preset }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DSOURCESDK_DIR=${{ env.ABSOLUTE_PATH }}/${{ env.HL2SDK_ROOT }}
        -DMETAMOD_DIR=${{ env.ABSOLUTE_PATH }}/${{ env.MMSOURCE_ROOT }}

    - name: Build
      run: cmake --build --preset ${{ matrix.preset }} --parallel --config ${{ matrix.build_type }}

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}-${{ matrix.c_compiler }}
        path: ${{ matrix.artifact_pattern }}
