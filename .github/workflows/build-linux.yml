name: Build on Linux

on:
  push:
    branches: [ "main" ]
    paths:
      - '.github/workflows/**.yml'
      - '{external,src}/**.{c,cpp,h,hpp}'
      - 'trigger-build.txt'
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/workflows/**.yml'
      - '{external,src}/**.{c,cpp,h,hpp}'
      - 'trigger-build.txt'

env:
  DOCKER_IMAGE_NAME: registry.gitlab.steamos.cloud/steamrt/sniper/sdk
  CMAKE_DEBUG_PRESET_NAME: Debug
  CMAKE_DEBUG_CONFIG_NAME: Debug
  CMAKE_DEBUG_OUTPUT_PATTERN: build/Debug/*.so
  CMAKE_RELEASE_PRESET_NAME: Release
  CMAKE_RELEASE_CONFIG_NAME: Release
  CMAKE_RELEASE_OUTPUT_PATTERN: build/Release/*.so
  CLANG_CC: clang
  CLANG_CXX: clang++
  HL2SDK_BRANCH: cs2
  HL2SDK_ROOT: external/hl2sdk-cs2
  MMSOURCE_ROOT: external/metamod-source

jobs:
  build:
    runs-on: ubuntu-latest
    container: ${{ env.DOCKER_IMAGE_NAME }}

    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build

    - name: Get absolute path
      if: runner.os == 'Linux'
      id: get_path-linux
      run: > 
        echo "ABSOLUTE_PATH=$(pwd)" >> $GITHUB_ENV && 
        echo "REPOSITORY_NAME=$(basename \"${{ github.repository }}\")" >> $GITHUB_ENV

    - name: Checkout HL2SDK
      uses: actions/checkout@v4
      with:
        repository: Wend4r/hl2sdk
        ref: ${{ env.HL2SDK_BRANCH }}
        path: ${{ env.HL2SDK_ROOT }}

    - name: Checkout MetaMod:Source
      uses: actions/checkout@v4
      with:
        repository: alliedmodders/metamod-source
        path: ${{ env.MMSOURCE_ROOT }}

    - name: Configure CMake (Debug, Clang)
      run: >
        cmake --preset ${{ env.CMAKE_DEBUG_PRESET_NAME }}
        -DCMAKE_C_COMPILER=${{ env.CLANG_CC }}
        -DCMAKE_CXX_COMPILER=${{ env.CLANG_CXX }}
        -DSOURCESDK_DIR=${{ env.ABSOLUTE_PATH }}/${{ env.HL2SDK_ROOT }}
        -DMETAMOD_DIR=${{ env.ABSOLUTE_PATH }}/${{ env.MMSOURCE_ROOT }}

    - name: Build (Debug)
      run: cmake --build --preset ${{ env.CMAKE_DEBUG_PRESET_NAME }} --parallel --config ${{ env.CMAKE_RELEASE_CONFIG_NAME }}

    - name: Configure CMake (Release, Clang)
      run: >
        cmake --preset ${{ env.CMAKE_RELEASE_PRESET_NAME }}
        -DCMAKE_C_COMPILER=${{ env.CLANG_CC }}
        -DCMAKE_CXX_COMPILER=${{ env.CLANG_CXX }}
        -DSOURCESDK_DIR=${{ env.ABSOLUTE_PATH }}/${{ env.HL2SDK_ROOT }}
        -DMETAMOD_DIR=${{ env.ABSOLUTE_PATH }}/${{ env.MMSOURCE_ROOT }}

    - name: Build (Release)
      run: cmake --build --preset ${{ env.CMAKE_RELEASE_PRESET_NAME }} --parallel --config ${{ env.CMAKE_RELEASE_CONFIG_NAME }}

    - name: Upload build artifact (${{ env.CMAKE_DEBUG_PRESET_NAME }})
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.REPOSITORY_NAME }}-${{ env.CMAKE_DEBUG_PRESET_NAME }}
        path: |
          ${{ env.CMAKE_DEBUG_OUTPUT_PATTERN }}

    - name: Upload build artifact (${{ env.CMAKE_RELEASE_PRESET_NAME }})
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.REPOSITORY_NAME }}-${{ env.CMAKE_RELEASE_PRESET_NAME }}
        path: |
          ${{ env.CMAKE_DEBUG_OUTPUT_PATTERN }}
