"Games"
{
	"cs2"
	{
		"Signatures"
		{
			// Used strings:
			// "Attempted to create unknown entity classname \"%s\"!\n"
			// 
			// Declaration: 
			// CEntityInstance *CEntitySystem::CreateEntity(
			//         CEntitySystem *const this,
			//         CEntityIndex iForcedIndex,
			//         const char *pszNameOrDesignName,
			//         EntityNetworkingMode_t networkMode,
			//         SpawnGroupHandle_t hSpawnGroup,
			//         int iForcedSerial,
			//         bool bCreateInIsolatedPrecacheList)
			// 
			// Type declarations:
			// enum EntityNetworkingMode_t
			// {
			// 	ENTITY_NETWORKING_MODE_DEFAULT = 0,
			// 	ENTITY_NETWORKING_MODE_NETWORKED,
			// 	ENTITY_NETWORKING_MODE_NOT_NETWORKED,
			// };
			// 
			// Basic usage:
			// (CBaseEntity *)CEntitySystem::CreateEntity(g_pEntitySystem, iForceEdictIndex, pClassName, ENTITY_NETWORKING_MODE_DEFAULT, (SpawnGroupHandle_t)-1, -1, nullptr, false);
			"CEntitySystem::CreateEntity"
			{
				"library"       "server"
				"windows64"     "48 8B C4 55 56 48 8B EC"
				"linux64"       "55 48 89 E5 41 57 4C 8D 7D C8 41 56 41 55 45 89 C5"
			}

			// Called into 
			// void CEntitySystem::QueueSpawnEntity(
			//          CEntitySystem *const this,
			//          CEntityInstance *pEntity,
			//          const CEntityKeyValues *pInitializationData)
			// {
			// 	CEntitySystem::QueueSpawnEntity(this, pEntity->m_pEntity, pInitializationData); // Our target.
			// }
			// This wrapping function is used where CVProfile::EnterScope(&g_VProfCurrentProfile, "Spawn", 0, "Server Simulation", 0, 4);
			// 
			// Declaration: 
			// void __fastcall CEntitySystem::QueueSpawnEntity(
			//         CEntitySystem *const this,
			//         CEntityIdentity *pEntity, // ((CEntityInstance *)pEntity)->m_pEntity
			//         const CEntityKeyValues *pInitializationData)
			"CEntitySystem::QueueSpawnEntity"
			{
				"library"       "server"
				"windows64"     "40 56 57 41 56 48 83 EC 30"
				"linux64"       "55 48 89 E5 41 57 41 56 49 89 D6 41 55 49 89 FD 41 54 49 89 F4 53 48 83 EC 18 F6 46 31 08"
			}

			// Usually, pair calls with CEntitySystem::QueueSpawnEntity().
			// 
			// Declaration:
			// void CEntitySystem::ExecuteQueuedCreation(
			//         CEntitySystem *const this)
			"CEntitySystem::ExecuteQueuedCreation"
			{
				"library"       "server"
				"windows64"     "48 89 5C 24 08 57 48 81 EC 00 01 00 00 FF 81 C8 0B 00 00"
				"linux64"       "55 48 89 E5 41 56 41 55 41 54 49 89 FC 53 48 81 EC E0 00 00 00 0F 31"
			}
		}

		"Offsets"
		{
			"CGameResourceService::m_pEntitySystem"
			{
				"windows64"     "0x58"
				"linux64"       "0x50"
			}
		}
	}
}
