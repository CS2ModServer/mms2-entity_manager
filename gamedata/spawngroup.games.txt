"Games"
{
	"csgo"
	{
		"Addresses"
		{
			"&g_pSpawnGroupMgr"
			{
				"signature"      "CPhysicsGameSystem::GetOrCreateLevelWorld"

				"win64"
				{
					"read_offs32"    "215"
				}

				"linuxsteamrt64"
				{
					"read_offs32"    "161"
				}
			}
		}

		"Signatures"
		{
			// Used strings: 
			// "%u"
			// "CO-%u"
			// ", "
			// "SV"
			// 
			// Used near "%s:  CPhysicsGameSystem::GameDeactivate\n"
			// 
			// Declaration:
			// IVPhysics2World *CPhysicsGameSystem::GetOrCreateLevelWorld(
			//        CPhysicsGameSystem *const this,
			//        WorldGroupId_t id,
			//        SpawnGroupHandle_t hSpawnGroup)
			// 
			// 
			"CPhysicsGameSystem::GetOrCreateLevelWorld"
			{
				"library"       "server"

				"win64"          "40 53 55 56 48 83 EC 20 44 0F B7 49 ? 48 8B E9 B9 ? ? ? ? 41 8B F0 8B DA 66 44 3B C9 74 51 4C 8B 45 48 0F 1F 40 00 0F 1F 84 00"
				"linuxsteamrt64" "55 48 89 E5 41 57 41 56 41 89 D6 41 55 49 89 FD 41 54 41 89 F4 53 48 83 EC 28 0F B7 47 58 66 83 F8 FF 74 28 48 8B 57 48"
			}
		}

		"Offsets"
		{
			// Initializes into GLOBAL__sub_I__unity_game_systems_01_cpp() -> __static_initialization_and_destruction_0()
			//   CBaseGameSystemFactory::CBaseGameSystemFactory(&s_GSFactoryCSpawnGroupMgrGameSystem, "SpawnGroupManagerGameSystem");
			//   g_StepSimulationManager.m_stepSimulationList.m_Size = 0;
			//   s_GSFactoryCSpawnGroupMgrGameSystem._vptr_IGameSystemFactory = (int (**)(...))off_3FCE690; // Virtual table of GSFactory.
			//   s_GSFactoryCSpawnGroupMgrGameSystem.m_ppGlobalPointer = &g_pSpawnGroupMgr; // <-- Here.
			"CGameSystemReallocatingFactory<CSpawnGroupMgrGameSystem,CSpawnGroupMgrGameSystem>::m_ppGlobalPointer"
			{
				"win64"          "24"
				"linuxsteamrt64" "24"
			}

			// See ISpawnGroup::GetName() used.
			"CSpawnGroupMgrGameSystem::m_SpawnGroups" // CUtlMap<SpawnGroupHandle_t, CMapSpawnGroup *>
			{
				"win64"          "320"
				"linuxsteamrt64" "320"
			}

			"CLoadingMapGroup::m_spawnInfo"
			{
				"win64"          "8"
				"linuxsteamrt64" "8"
			}

			// Used in CMapSpawnGroup::OnSpawnGroupLoad():
			//   v37 = CSpawnGroupMgrGameSystem::Get(g_pSpawnGroupMgr, v36);
			//   if ( !v93 )
			//   {
			//     if ( v37 )
			//       v38 = (const char *)((__int64 (__fastcall *)(ISpawnGroup *))*v37->m_pSpawnGroup->_vptr_ISpawnGroup)(v37->m_pSpawnGroup); // <-- Here call.
			//     else
			//       v38 = "???";
			//     src = (char *)v38;
			//   }
			// Near strings:
			//  ...
			//   "???" // The most.
			//   "forward"
			//   "backward"
			//   "%u"
			//   "CO-%u"
			//   "CO-%u"
			//   "%s(%s):  Found %s connection to %s:  %s at %f %f %f\n" // To find.
			//  ...
			"ISpawnGroup::GetName"
			{
				"win64"          "0"
				"linuxsteamrt64" "0"
			}

			"CBaseSpawnGroup::m_pEntityFilterName"
			{
				"win64"          "128"
				"linuxsteamrt64" "128"
			}
		}
	}
}
